//App.js
import { BrowserRouter as Router, Route, Routes } from "react-router-dom"; 
import Login from "./Login"; 
import AuthProvider from "./AuthProvider"; 
import PrivateRoute from "./PrivateRoute"; 
import Dashboard from "./Dashboard"; 

function App() {
  return ( 
    <div className="App">
      <Router> {/* Añadir el componente Router aquí */}
        <AuthProvider>
          <Routes>
            <Route path="/" element={<Login />} />
            <Route path="/login" element={<Login />} />
            <Route element={<PrivateRoute />}>
              <Route path="/dashboard" element={<Dashboard />} />
            </Route>
          </Routes>
        </AuthProvider>
      </Router> {/* Cierre del componente Router */}
    </div>
  );
}

export default App;


// AuthProvider.js
import { useContext, createContext, useState } from "react";
import { useNavigate, useLocation, Navigate } from "react-router-dom";

const AuthContext = createContext();

const AuthProvider = ({ children }) => {
  const [user, setUser] = useState(null);
  const [token, setToken] = useState(localStorage.getItem("site") || "");
  const navigate = useNavigate();
  const location = useLocation();

  const loginAction = (data) => {
    if (data.username === "admin" && data.password === "12345") {
      setUser(data.username);
      setToken(data.password);
      localStorage.setItem("site", data.password);
      navigate("/dashboard");
    } else {
      throw Error("Usuario no encontrado");
    }
  };

  const logOut = () => {
    setUser(null);
    setToken("");
    localStorage.removeItem("site");
    navigate("/login");
  };

  // Si no hay usuario autenticado, redirigir al login
  if (!user) {
    return <Navigate to="/login" state={{ from: location }} replace />;
  }

  return (
    <AuthContext.Provider value={{ token, user, loginAction, logOut }}>
      {children}
    </AuthContext.Provider>
  );
};

export default AuthProvider;

// Hook personalizado
export const useAuth = () => {
  return useContext(AuthContext);
};




























//Login.jsx
import { useState } from "react";
import { useAuth } from "./AuthProvider";
const Login = () => {
    const [input, setInput] = useState({
        username: "",
        password: "",
    });
    const [mensaje, setMensaje] = useState("");
    const auth = useAuth();
    const handleSubmitEvent = (e) => {
        e.preventDefault();
        if (input.username !== "" && input.password !== "") {
            try {
                auth.loginAction(input);
            } catch (error) {
                setMensaje(error.message);
            }
            return;
        }
        alert("El usuario y la contraseña es obligatorio");
    };
    const handleInput = (e) => {
        const { name, value } = e.target;
        setInput((prev) => ({
            ...prev,
            [name]: value,
        }));
    };
    return (
        <>
            <div style={{ color: "red" }}>{mensaje}</div>
            <form onSubmit={handleSubmitEvent}>
                <div className="form_control">
                    <label htmlFor="user-name">Usuario:</label>
                    <input
                        type="text"
                        id="user-name"
                        name="username"
                        aria-describedby="user-name"
                        aria-invalid="false"
                        onChange={handleInput}
                    />
                    <div id="user-name" className="sr-only">
                        Por favor ingrese un nombre de usuario válido (mínimo 6 caracteres).
                    </div>
                </div>
                <div className="form_control">
                    <label htmlFor="password">Contraseña:</label>
                    <input
                        type="password"
                        id="password"
                        name="password"
                        aria-describedby="user-password"
                        aria-invalid="false"
                        onChange={handleInput}
                    />
                    <div id="user-password" className="sr-only">
                        Por favor ingrese una contraseña válida (mínimo 6 caracteres).
                    </div>
                </div>
                <button className="btn-submit">Iniciar sesión</button>
            </form>
        </>
    );
};
export default Login;






//Dashboard.jsx
import { useAuth } from "./AuthProvider"; 
const Dashboard = () => { 
    const auth = useAuth();
    return ( 
    <div className="container">
    <div>
    <h1>Bienvenido! {auth.user}</h1>
    <button onClick={() => auth.logOut()} className="btn-submit">
    Cerrar sesión
    </button>
    </div>
    </div>
    );
   };
   export default Dashboard;

¿Puedes revisar, y arreglar el error que me indicaste anteriormente?
El error que me indicaste es:
 Unhandled Error: useNavigate() may be used only in the context of a <Router> component.

